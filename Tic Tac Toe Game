#Tic Tac Toe
Tic Tac Toe
 print​(​"Welcome to Tic Tac Toe! This is a Player vs Player game!"​)
 board = [​" " ​for ​x ​in ​range​(​9​)]
 #will print out tic-tac-toe board when called in game
 def ​print_Board​(board):
 ​print​(board[​0​]​, ​"|"​,​board[​1​]​,​"|"​,​board[​2​])
 ​print​(​"----------"​)
 ​print​(board[​3​]​,​"|"​,​board[​4​]​,​"|"​,​board[​5​])
 ​print​(​"----------"​)
 ​print​(board[​6​]​,​"|"​,​board[​7​]​,​"|"​,​board[​8​])
 #Player moves are defined so that player 1 is O and player 2 is X
 #icon is universal in Python, in which they are O and X
 #player_move determines whether a space is available or unavailable using
 Board_place and the if statement
 #If space is empty, the icon O or X will fill the specific spot
 def ​player_move​(icon):
 ​if ​icon == ​"O"​:
 num = ​1
 ​if ​icon == ​"X"​:
 num = ​2
 ​print​(​"It's your turn Player {}"​.format(num))
 Board_place = ​int​(​input​(​"Please enter your move (0-8): "​).strip())
 ​if ​board[Board_place] == ​" "​:
 board[Board_place] = icon
 ​else​:
 ​print​(​"That space is taken!"​)
 #this function returns true if one of the players has won
 #if one of these strings are true, then the player who made the last move has
 won
#if all strings are false, the game will continue unless all board spots are
 filld up
 def ​Winner​(icon):
 ​if ​(board[​0​] == icon ​and ​board[​1​] == icon ​and ​board[​2​] == icon) ​or ​(board[​0​]
 == icon ​and ​board[​3​] == icon ​and ​board[​6​] == icon) ​or ​(board[​0​] == icon ​and
 board[​4​] == icon ​and ​board[​8​] == icon) ​or ​(board[​1​] == icon ​and b​ oard[​4​] ==
 icon ​and ​board[​7​] == icon) ​or (​ board[​2​] == icon ​and ​board[​4​] == icon ​and
 board[​6​] == icon) ​or ​(board[​2​] == icon ​and ​board[​5​] == icon ​and b​ oard[​8​] ==
 icon) ​or ​(board[​3​] == icon ​and ​board[4​ ​] == icon ​and ​board[​5​] == icon) ​or
 (board[​6​] == icon ​and ​board[​7​] == icon ​and ​board[​8​] == icon):
 ​return True
 else​:
 ​return False
 #if there is no space in the board, the game is a draw
  
 def ​draw​():
 ​if ​" " ​not in ​board:
 ​return True
 else​:
 ​return False
 #While loop is the game
 #game will allow players to input values in for places on the board
 #If there is space and there isn't a winner, the game continues due to the
 while loop
 #the board will continue to be printed
 while True​:
 print_Board(board)
 player_move(​"O"​)
 print_Board(board)
 ​if ​Winner(​"O"​):
 ​print​(​"O is the Winner!"​)
 ​break
 elif ​draw():
 ​print​(​"Tie game!"​)
 ​break
 ​player_move(​"X"​)
 ​if ​Winner(​"X"​):
 print_Board(board)
 ​print​(​"X is the winner!"​)
 ​break
 elif ​draw():
 ​print​(​"Tie game!"​)
 ​break
 print​(​"​\n​Thank you for playing Tic Tac Toe!"​)
